<% if (!@job_results)%>
      No Job Status Updates yet...<br>
<% end
links=""

results_copy = @job_results
@annotation_copy = @job_results %>

<table>

<tr class="form_subtitle"><td><h1>Results for <%= @job.Type %> job <%= @job.id %></h1><td></tr>

<% # loop through and check exactly which alignments were actually generated by the final pseudo_bas call. In the genthreader_results view we will test which alignments are available before printing %>
<% results_copy.each do |job_state|
  if(job_state.status_class == 8)
    @alignments[job_state.content_name] = "TRUE"
  end
end

#print out the genthreader/domthreader results table first and keep a record of which lines you've printed
   @job_results.each do |job_state|

     if (job_state.status_class == 9 && ( job_state.content_name =~ /^Gen Template Group/ ||  job_state.content_name =~ /^mGen Template Group/) ) %>
    <tr class="form_subtitle"><td><h4>Genthreader Scores (alignments displayed against the first of the input sequences)</h4></td></tr>
    <tr><td><%= render :partial => 'layouts/genthreader_result',
          :locals => {:log_result => job_state, :result_filter => @result_filter, :bgcolor => "#ccc"} %></td></tr>
  <% elsif (job_state.status_class == 10) %>
    <tr class="form_subtitle"><td><h4>Genthreader Scores</h4></td></tr>
    <tr><td><%= render :partial => 'layouts/genthreader_result',
          :locals => {:log_result => job_state, :result_filter => @result_filter, :bgcolor => "#ccc"} %></td></tr>

  <% end
   end

#Link to the genTHREADER Contact Consensus if you've found them
   @job_results.each do |job_state|
     if job_state.status_class == 54 %>
     <tr class="form_subtitle"><td><h4>Contact Residue Consensus (experimental)</h4></td></tr>
     <tr><td>This new output indicates the position of ligand contact residues in the query sequence as mapped from the alignments with hits of MEDIUM or better confidence.<br />
         <h4>Click to download the <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">contact consensus in plain text format</a></h4>
       </td></tr>
  <% end
   end
   #
#
#Link to the Contact SVM output if you've found them
   @job_results.each do |job_state|
     if job_state.status_class == 55 %>
     <tr><td><h4>Click to download the <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">contact consensus SVM output</a></h4>
       </td></tr>
  <% end
   end

#Link to the Contact SVM output if you've found them
   @job_results.each do |job_state|
     if job_state.status_class == 56 %>
     <tr><td><h4>No Contacts could be predicted, relatives did not contain sufficient ligand contact data for prediction</h4>
       </td></tr>
  <% end
   end

experimental_printed = 0
   @job_results.each do |job_state|
     if job_state.status_class == 51
        if experimental_printed == 0 %>
     <tr class="form_subtitle"><td><h4>Query and results multiple realignment (experimental)</h4></td></tr>
      <tr><td> This new output takes all hits of MEDIUM or better confidence and produces a realignment with the query sequence. Separate alignments are build for the CERT, CERT & HIGH and CERT-HIGH & MEDIUM hits.
       </td></tr>
     <% experimental_printed+=1
        end
        if job_state.content_name =~ /cert\.multialign/ %>
     <tr><td><h4>Click to download a <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>"> realignment of the query sequence and the CERT confidence hits</a></h4></td></tr>
     <% end
        if job_state.content_name =~ /certhigh\.multialign/ %>
     <tr><td><h4>Click to download a <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>"> realignment of the query sequence and the CERT and HIGH confidence hits</a></h4></td></tr>
     <% end
        if job_state.content_name =~ /all\.multialign/ %>
      <tr><td><h4>Click to download a <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">realignment of the query sequence with all the hits</a></h4></td></tr>
     <% end
     end
   end

   @ss2_state
  @job_results.each do |job_state|
   if job_state.status_class == 57
     @ss2_state = job_state.id
   end
  end

   #print out the psipred data if you've found them
   @job_results.each do |job_state|
     if job_state.status_class == 11 && @job.Type =~ /psipred/ %>
     <tr><td><h1>Output for PSIPRED predictions</h1></td></tr>
     <tr class="form_subtitle"><td><h4>Psipred Residue Predictions (results displayed against the first of the input sequences)</h4></td></tr>
     <tr><td><%= render :partial => 'layouts/psipred_result',
                 :locals => {:log_result => job_state, :result_filter => @result_filter, :bgcolor => "#ccc"} %></td></tr>
     <tr><td><h4>Click to download these <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">results in plain text format</a></h4></td></tr>
     <tr><td><h4>Click to download the machine learning scores <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => @ss2_state) %>">results in plain text format</a></h4></td></tr>
     <tr class="form_subtitle"><td><h4>Psipred Images</h4></td></tr>
  <% end
   end

   #print out the psipred diagrams if found
   hDiagramNames = Hash.new{|h,k| h[k]=Hash.new(&h.default_proc) }
   @job_results.each do |job_state|
     if (job_state.status_class == 14)
        if job_state.content_name =~ /.+_(\d+)\.png/
        hDiagramNames[$1] = url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id)
     end
    end
   end
   hDiagramNames.keys.sort.each do |order| %>
   <tr><td><a href="<%= hDiagramNames[order]  %>"><img style="border: 1px;" src="<%= hDiagramNames[order] %>" /></a></td></tr>
<% end

   @job_results.each do |job_state|
     if (job_state.status_class == 13) %>
    <tr><td><h4>Download <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">PDF version</a></h4></td></tr>
  <% elsif (job_state.status_class == 12) %>
    <tr><td><h4>Download <a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">Postscript version</a></h4></td></tr>
  <% end
   end

#print out the memsat data if you've found them
@job_results.each do |job_state|
   if (job_state.status_class == 44) %>
        <tr><td><h1>MEMPACK predicted fewer than 2 helices</h1></td></tr>

        <tr><td><h3><a href="<%= url_for(:only_path => false, :controller => "bio_serf", :action => "public_status", :id => @job.id) %>">Click here for detailed information on the helix prediction</a></h3></td></tr>   
   <% end
   end

   #print out the notification of MEMPACK failure and link to full status
   @job_results.each do |job_state|
   if (job_state.status_class == 52) %>
        <tr><td><h1>MEMPACK Produced no helix contacts</h1></td></tr>
        <tr><td><h3><a href="<%= url_for(:only_path => false, :controller => "bio_serf", :action => "public_status", :id => @job.id) %>">Click here for detailed information on the contact prediction</a></h3></td></tr>  
  <% end
   end

   #print out the thumbnailed mempack diagrams if you've found them
   @job_results.each do |job_state|
     if (job_state.status_class == 43) %>
        <tr class="form_subtitle"><td><h4>MEMPACK Cartoon</h4></td></tr>
        <tr><td><a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>"><img style="border: 1px;" src="<%= url_for(:controller => "bio_serf", :action => "getthumbnail", :id => job_state.thumbnails.first.id) %>" /></a></td></tr>
   <% end
   end

          #print out download links to mempack intermediate files if generated
           @job_results.each do |job_state|
             if (job_state.status_class == 45) %>
            <tr class="form_subtitle"><td><h4>MEMPACK Intermediate Files</h4></td></tr>
            <tr><td><a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">Graph Results Download</a></td></tr>
          <% end
           end
           #print out download links to mempack intermediate files if generated
           @job_results.each do |job_state|
             if (job_state.status_class == 46) %>
            <tr><td><a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">Lipid Results Download</a></td></tr>
          <% end
           end
           #print out download links to mempack intermediate files if generated
           @job_results.each do |job_state|
             if (job_state.status_class == 47) %>
            <tr><td><a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>">Contact Results Download</a></td></tr>
          <% end
           end
   #print out the schematic diagram if you've found them
   @job_results.each do |job_state|
     if (job_state.status_class == 21) %>
        <tr class="form_subtitle"><td><h1>MEMSAT-SVM Schematic</h1></td></tr>
        <tr><td><a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>"><img style="border: 1px;" src="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>" /></a></td></tr>
    <% end
   end

   @job_results.each do |job_state|
     if (job_state.status_class == 19) %>
    <tr><td><h1>MEMSAT-SVM Prediction</h1></td></tr>
    <tr class="form_subtitle"><td><h4>Summary of MEMSAT-SVM Topology Analysis</h4></td></tr>
        <%= render :partial => 'layouts/memsatsvm_result',
                     :locals => {:log_result => job_state, :result_filter => @result_filter, :bgcolor => "#ccc"} %>
  <% end
   end
   #print out the memsat diagrams if you've found them
   @job_results.each do |job_state|
     if (job_state.status_class == 32) %>
        <tr class="form_subtitle"><td><h4>MEMSAT-SVM Cartoon</h4></td></tr>
        <tr><td><a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>"><img style="border: 1px;" src="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>" /></a></td></tr>
   <% end
   end
   @job_results.each do |job_state|
     if (job_state.status_class == 16) %>
    <tr><td><h1>MEMSAT3 Prediction</h1></td></tr>
    <tr class="form_subtitle"><td><h4>Summary of MEMSAT3 Topology Analysis</h4></td></tr>
        <%= render :partial => 'layouts/memsat_result',
                     :locals => {:log_result => job_state, :result_filter => @result_filter, :bgcolor => "#ccc"} %>
  <% end
   end
   #print out the memsat diagrams if you've found them
   @job_results.each do |job_state|
     if (job_state.status_class == 20) %>
        <tr class="form_subtitle"><td><h4>MEMSAT Cartoon</h4></td></tr>
        <tr><td><a href="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>"><img style="border: 1px;" src="<%= url_for(:controller => "bio_serf", :action => "getresultattached", :id => job_state.id) %>" /></a></td></tr>
   <% end
   end %>

</table>

